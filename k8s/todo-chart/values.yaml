replicaCount: 1

image:
  backend:
    repository: todo-backend
    tag: "latest"
    pullPolicy: IfNotPresent
  frontend:
    repository: todo-frontend
    tag: "latest"
    pullPolicy: IfNotPresent

service:
  backend:
    port: 8080
  frontend:
    port: 80

postgres:
  enabled: true
  image: postgres:15
  postgresUser: postgres
  postgresPassword: postgres
  postgresDatabase: todo_db
  persistence:
    enabled: true
    size: 1Gi
    storageClass: ""  # use default storageclass; set for your environment

resources:
  backend:
    requests:
      cpu: 200m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi
  frontend:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 300m
      memory: 256Mi
  postgres:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 300m
      memory: 512Mi

ingress:
  enabled: true
  host: todo.local
  annotations:
    kubernetes.io/ingress.class: nginx
    # add cert-manager annotations if you use TLS

livenessProbe:
  backend:
    enabled: true
    path: /actuator/health
    initialDelaySeconds: 30
    periodSeconds: 10

readinessProbe:
  backend:
    enabled: true
    path: /actuator/health
    initialDelaySeconds: 10
    periodSeconds: 5

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 60

prometheus:
  serviceMonitor:
    enabled: true
    interval: 15s
    path: /actuator/prometheus
