{{- if .Values.postgres.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "todo.fullname" . }}-postgres
  labels:
    app: {{ include "todo.fullname" . }}-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "todo.fullname" . }}-postgres
  template:
    metadata:
      labels:
        app: {{ include "todo.fullname" . }}-postgres
    spec:
      containers:
        - name: postgres
          image: "{{ .Values.postgres.image }}"
          env:
            - name: POSTGRES_USER
              value: "{{ .Values.postgres.postgresUser }}"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "todo.fullname" . }}-pg-secret
                  key: postgres-password
            - name: POSTGRES_DB
              value: "{{ .Values.postgres.postgresDatabase }}"
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: pgdata
              mountPath: /var/lib/postgresql/data
          resources:
{{ toYaml .Values.resources.postgres | indent 12 }}
      volumes:
        - name: pgdata
          persistentVolumeClaim:
            claimName: {{ include "todo.fullname" . }}-pg-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "todo.fullname" . }}-pg-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.postgres.persistence.size }}
  {{- if .Values.postgres.persistence.storageClass }}
  storageClassName: "{{ .Values.postgres.persistence.storageClass }}"
  {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "todo.fullname" . }}-postgres
spec:
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: {{ include "todo.fullname" . }}-postgres
  type: ClusterIP
{{- end }}
